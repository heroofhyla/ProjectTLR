/*:
 * @plugindesc Adds a nameplate above message boxes.
 * @author Michael Stroud
 *
 * @param variableNumber 
 * @desc Which variable to use for storing the target
 * @default 1
 *
 * @help This plugin does not provide plugin commands.
*/
(function(){
	function Window_Name() {
		this.initialize.apply(this, arguments);
	}

	Window_Name.prototype = Object.create(Window_Base.prototype);
	Window_Name.prototype.constructor = Window_Name;

	Window_Name.prototype.initialize = function(x, y) {
		var width = this.windowWidth();
		var height = this.windowHeight();
		Window_Base.prototype.initialize.call(this, x, y, width, height);
		this.refresh();
	};

	Window_Name.prototype.windowWidth = function() {
		return 240;
	};

	Window_Name.prototype.windowHeight = function() {
		return this.fittingHeight(1);
	};

	Window_Name.prototype.refresh = function() {
		var x = this.textPadding();
		var width = this.contents.width - this.textPadding() * 2;
		this.contents.clear();
		this.drawCurrencyValue(this.value(), this.currencyUnit(), x, 0, width);
	};

	Window_Name.prototype.value = function() {
		return $gameParty.Name();
	};

	Window_Name.prototype.currencyUnit = function() {
		return TextManager.currencyUnit;
	};

	Window_Name.prototype.open = function() {
		this.refresh();
		Window_Base.prototype.open.call(this);
	};
})();